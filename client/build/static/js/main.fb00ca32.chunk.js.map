{"version":3,"sources":["components/shared/Preloader/Preloader.module.scss","components/shared/Footer/Footer.module.scss","store/notificationReducer.js","utils/helpers/auth-helpers.js","api/api.js","store/profileReducer.js","store/appReducer.js","components/shared/Preloader/Preloader.jsx","components/shared/Header/Header.jsx","components/shared/Footer/Footer.jsx","components/shared/Notification/Notification.jsx","components/shared/FormControls/FormControls.js","store/todoReducer.js","components/dashboard/Todos/TodosForm/validate.js","components/dashboard/Todos/todosList.js","components/dashboard/Todos/TodosForm/TodosForm.jsx","components/dashboard/Todos/Todo/Todo.jsx","components/dashboard/Todos/Todos.jsx","components/auth/Login/validate.js","components/auth/Login/Login.jsx","components/auth/Register/validate.js","components/auth/Register/Register.jsx","components/public/NotFound/NotFound.jsx","App.js","store/reducers.js","store/store.js","components/shared/ScrollToTop/ScrollToTop.jsx","index.js","components/dashboard/Todos/TodosForm/TodosForm.module.scss","components/dashboard/Todos/Todo/Todo.module.scss"],"names":["module","exports","initState","msg","type","error","success","setNote","body","hideNote","notificationReducer","state","action","authHeader","token","localStorage","getItem","axiosInstance","axios","baseURL","process","profileAPI","creds","post","data","get","headers","todoAPI","getTodos","addTodo","updateTodo","put","_id","deleteTodo","id","delete","initialState","name","username","address","birthday","phone","isAuth","setProfileData","setAuthStatus","getProfile","dispatch","then","response","res","status","user","profileReducer","initialized","isDataFetching","toggleIsFetching","appReducer","Preloader","className","s","spinnerWrap","spinner","useStyles","makeStyles","link","marginLeft","connect","profile","logout","removeItem","push","props","classes","AppBar","position","Toolbar","Container","maxWidth","Grid","container","justify","alignItems","item","Typography","variant","Link","color","component","NavLink","to","onClick","Footer","mainFooter","spacing","Alert","elevation","useState","open","setOpen","useEffect","handleClose","event","reason","Snackbar","autoHideDuration","onClose","severity","renderTextField","label","input","meta","touched","invalid","custom","TextField","placeholder","helperText","renderSelectField","children","select","list","currentTodo","title","author","resetCurrentTodo","requestTodos","todos","handleTodo","apiMethod","message","reset","catch","todoReducer","validate","values","errors","statusList","TodoReduxForm","reduxForm","form","handleSubmit","setStatus","editMode","setEditMode","handleReset","initialize","Box","p","onSubmit","Field","margin","fieldBox","inputProps","value","onChange","target","map","option","MenuItem","key","Button","submit","authorId","postTodo","bind","setCurrentTodo","filter","el","todoWrap","data-status","task","IconButton","aria-label","iconBtn","window","scrollTo","fontSize","gutterBottom","todo","password","LoginReduxForm","align","fullWidth","m","isFetching","login","email","setItem","setTimeout","console","log","length","repeatPassword","match","phoneMask","createTextMask","pattern","RegisterReduxForm","register","NotFound","direction","App","compose","withRouter","notification","app","initializeApp","promiseArray","Promise","all","exact","path","render","reducersGroup","history","combineReducers","router","connectRouter","formReducer","createBrowserHistory","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","routerMiddleware","thunkMiddleware","__store__","ScrollToTop","pathname","useLocation","ReactDOM","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.fb00ca32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrap\":\"Preloader_spinnerWrap__2iQF-\",\"spinner\":\"Preloader_spinner__3OKRr\",\"sk-rotateplane\":\"Preloader_sk-rotateplane__3oJWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainFooter\":\"Footer_mainFooter__1jrcT\"};","export const SET_NOTE = \"SET_NOTE\";\nexport const HIDE_NOTE = \"HIDE_NOTE\";\n\n// Initial Data\nconst initState = {\n    msg: \"\",\n    type: \"info\",\n    error: false,\n    success: false\n};\n\nconst notificationReducer = (state = initState, action) => {\n    switch (action.type) {\n        case SET_NOTE:\n            return {...state, ...action.body};\n        case HIDE_NOTE:\n            return {...state, msg: null, type: \"info\", error: false, success: false};\n        default:\n            return state;\n    }\n};\n\n// Action Creators\nexport const setNote = (body) => ({type: SET_NOTE, body: body});\nexport const hideNote = () => ({type: HIDE_NOTE});\n\n\nexport default notificationReducer;\n","export const authHeader = () => {\n    let token = localStorage.getItem('token');\n    if (token) {\n        return { 'Authorization': 'Bearer ' + token };\n    } else {\n        return {};\n    }\n};\n","import * as axios from 'axios';\nimport {authHeader} from \"../utils/helpers/auth-helpers\";\n\n\nconst axiosInstance = axios.create({\n    baseURL: process.env.REACT_APP_SERVER_URL\n});\n\n\nexport const profileAPI = {\n    login(creds) {\n        return axiosInstance.post(`auth/login`, creds);\n    },\n    register(data) {\n        return axiosInstance.post(`auth/register`, data);\n    },\n    me() {\n        return axiosInstance.get(`auth/profile`, {headers: authHeader()});\n    }\n};\n\nexport const todoAPI = {\n    getTodos() {\n        return axiosInstance.get(`todos`, {headers: authHeader()});\n    },\n    addTodo(data) {\n        return axiosInstance.post(`todos`, data, {headers: authHeader()});\n    },\n    updateTodo(data) {\n        return axiosInstance.put(`todos/${data._id}`, data, {headers: authHeader()});\n    },\n    deleteTodo(id) {\n        return axiosInstance.delete(`todos/${id}`, {headers: authHeader()});\n    }\n\n}\n","import {toggleIsFetching} from \"./appReducer\";\nimport {profileAPI} from \"../api/api\";\nimport {setNote, hideNote} from \"./notificationReducer\";\nimport {push} from \"connected-react-router\";\nimport {reset} from \"redux-form\";\n\n// Actions\nconst SET_PROFILE_DATA = 'SET_PROFILE_DATA';\nconst SET_AUTH_STATUS = 'SET_AUTH_STATUS';\n\n\n// Initial Data\nlet initialState = {\n    _id: null,\n    name: null,\n    username: null,\n    address: null,\n    birthday: null,\n    phone: null,\n    isAuth: false\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_PROFILE_DATA:\n            return {...state, ...action.data};\n        case SET_AUTH_STATUS:\n            return {...state, isAuth: action.isAuth};\n        default:\n            return state;\n    }\n};\n\n// Action Creators\nexport const setProfileData = (data) => ({type: SET_PROFILE_DATA, data});\nexport const setAuthStatus = (isAuth) => ({type: SET_AUTH_STATUS, isAuth});\n\n// Thunks\nexport const getProfile = () => {\n    return (dispatch) => {\n        profileAPI.me()\n            .then(response => {\n                let res = response.data;\n                if (res.status) {\n                    dispatch(setProfileData(res.user));\n                    dispatch(setAuthStatus(true));\n                }\n            });\n    }\n};\n\nexport const register = (data) => {\n    return (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(hideNote());\n        profileAPI.register(data)\n            .then(response => {\n                let res = response.data;\n                dispatch(toggleIsFetching(false));\n                if (res.status) {\n                    dispatch(setNote({msg: res.message, type: \"success\", error: false, success: true}));\n                    dispatch(reset('register'));\n                    dispatch(push('/login'));\n                } else {\n                    dispatch(setNote({msg: res.message, type: \"error\", error: true, success: false}));\n                }\n            }).catch(error => {\n            dispatch(toggleIsFetching(false));\n            dispatch(setNote({msg: error.response.data.message, type: \"error\", error: true, success: false}));\n        });\n    }\n};\n\nexport const login = (email, password) => {\n    return (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(hideNote());\n\n        profileAPI.login(email, password)\n            .then(response => {\n                dispatch(toggleIsFetching(false));\n                let res = response.data;\n                if (res.status) {\n                    localStorage.setItem('token', res.token);\n                    setTimeout(() => {\n                        dispatch(getProfile());\n                        dispatch(push('/'));\n                    }, 100);\n                }\n            }).catch(error => {\n            console.log(error.response);\n            dispatch(toggleIsFetching(false));\n            dispatch(setNote({msg: error.response.data.message, type: \"error\", error: true, success: false}));\n\n        });\n    }\n};\n\n\nexport const logout = () => {\n    return (dispatch) => {\n        dispatch(setAuthStatus(false));\n        dispatch(setProfileData(initialState));\n        localStorage.removeItem('token');\n        dispatch(push('/login'));\n    }\n};\n\nexport default profileReducer;\n","import {getProfile} from \"./profileReducer\";\n\n// Actions\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n// Initial Data\nlet initialState = {\n    initialized: false,\n    isDataFetching: false\n};\n\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            };\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isDataFetching: action.isDataFetching}\n        }\n        default:\n            return state;\n    }\n};\n\n// Action Creators\nexport const toggleIsFetching = (isDataFetching) => ({type: TOGGLE_IS_FETCHING, isDataFetching});\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\n\n// Thunks\nexport const initializeApp = () => {\n    return (dispatch) => {\n        let promiseArray = [];\n        localStorage.getItem('token') && promiseArray.push(dispatch(getProfile()));\n        dispatch(toggleIsFetching(true));\n\n        Promise.all(promiseArray).then(() => {\n            setTimeout(() => {\n                dispatch(toggleIsFetching(false));\n                dispatch(initializedSuccess());\n            }, 500);\n        });\n    }\n};\n\n\nexport default appReducer;\n","import React from 'react';\nimport s from './Preloader.module.scss';\n\nlet Preloader = () => {\n    return (\n        <div className={s.spinnerWrap}>\n            <div className={s.spinner}>\n            </div>\n        </div>\n    );\n};\n\nexport default Preloader;\n","import React from \"react\";\nimport {AppBar, Toolbar, Typography, Link, Container, Grid} from \"@material-ui/core\";\nimport {NavLink} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {logout} from \"../../../store/profileReducer\";\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        marginLeft: '20px',\n    },\n}));\n\nconst Header = (props) => {\n    const classes = useStyles();\n    const logout = () => {\n        props.logout();\n    };\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Container maxWidth=\"lg\">\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\n                        <Grid item>\n                            <Typography variant=\"h6\">Todo App</Typography>\n                        </Grid>\n                        <Grid item>\n                            {!props.isAuth &&\n                            <>\n                                <Link color=\"inherit\" component={NavLink} className={classes.link} to=\"/login\">Login</Link>\n                                <Link color=\"inherit\" component={NavLink} className={classes.link} to=\"/register\">Sign Up</Link>\n                            </>\n                            }\n                            {props.isAuth && <Link color=\"inherit\" className={classes.link} onClick={logout}>Log Out</Link>}\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Toolbar>\n        </AppBar>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.profile.isAuth\n});\nexport default connect(mapStateToProps, {logout})(Header);\n","import React from 'react';\nimport s from './Footer.module.scss';\nimport {Container, Grid, Typography} from \"@material-ui/core\";\n\n\nconst Footer = () => {\n    return (\n        <footer className={s.mainFooter}>\n            <Container maxWidth=\"lg\">\n                <Grid container spacing={5} justify=\"space-between\" alignItems=\"center\">\n                    <Grid item>\n                        <Typography variant=\"body2\" component=\"p\">&copy; Todo App 2020</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body2\" component=\"p\">All rights reserved</Typography>\n                    </Grid>\n                </Grid>\n            </Container>\n        </footer>\n    );\n};\n\n\nexport default Footer;\n","import React, {useState, useEffect} from \"react\";\nimport {Snackbar,} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {hideNote} from \"../../../store/notificationReducer\";\nimport {connect} from \"react-redux\";\n\n\nconst Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n};\n\nconst Notification = ({type, msg, hideNote}) => {\n    const [open, setOpen] = useState(false);\n\n    useEffect(() => {\n        setOpen(false);\n        msg && setOpen(true);\n    }, [msg]);\n\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        hideNote();\n        setOpen(false);\n\n    };\n\n    return (\n        <>\n            {(msg && type) &&\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={type}>\n                    {msg}\n                </Alert>\n            </Snackbar>\n            }\n        </>\n\n    );\n};\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, {hideNote})(Notification);\n","import React from 'react';\nimport \"./FormControls.scss\";\nimport {TextField} from \"@material-ui/core\";\n\n\nexport const renderTextField = ({label, input, meta: {touched, invalid, error}, ...custom}) => (\n    <TextField\n        label={label}\n        placeholder={label}\n        error={touched && invalid}\n        helperText={touched && error}\n        {...input}\n        {...custom}\n    />\n);\n\n\nexport const renderSelectField = ({input, label, meta: {touched, error, invalid}, children, ...custom}) => (\n    <TextField select\n               label={label}\n               placeholder={label}\n               error={touched && invalid}\n               helperText={touched && error}\n               {...input}\n               {...custom}\n\n    >\n        {children}\n    </TextField>\n);\n","import {toggleIsFetching} from \"./appReducer\";\nimport {hideNote, setNote} from \"./notificationReducer\";\nimport {todoAPI} from \"../api/api\";\nimport {reset} from \"redux-form\";\n\n// Actions\nconst SET_TODOS = 'SET_TODOS';\nconst SET_CURRENT_TODO = 'SET_CURRENT_TODO';\nconst RESET_CURRENT_TODO = 'RESET_CURRENT_TODO';\n\n// Initial Data\nlet initialState = {\n    list: [],\n    currentTodo: {\n        _id: null,\n        title: null,\n        status: 0,\n        author: null\n    }\n};\n\nconst todoReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_TODOS:\n            return {...state, list: action.todos};\n        case SET_CURRENT_TODO:\n            return {...state, currentTodo: action.data};\n        case RESET_CURRENT_TODO:\n            return {...state, currentTodo: initialState.currentTodo};\n        default:\n            return state;\n    }\n};\n\n// Action Creators\nexport const setTodos = (todos) => ({type: SET_TODOS, todos});\nexport const setCurrentTodo = (data) => ({type: SET_CURRENT_TODO, data});\nexport const resetCurrentTodo = () => ({type: RESET_CURRENT_TODO});\n\n// Thunks\nexport const requestTodos = () => {\n    return (dispatch) => {\n        todoAPI.getTodos()\n            .then(response => {\n                if (response.status) {\n                    dispatch(setTodos(response.data));\n                }\n            });\n    }\n};\n\nconst handleTodo = (dispatch, data, apiMethod) => {\n    dispatch(toggleIsFetching(true));\n    dispatch(hideNote());\n    apiMethod(data)\n        .then(response => {\n            let res = response.data;\n            dispatch(toggleIsFetching(false));\n            if (res.status) {\n                dispatch(setNote({msg: res.message, type: \"success\", error: false, success: true}));\n                dispatch(reset('todos'));\n                 dispatch(requestTodos());\n                dispatch(resetCurrentTodo());\n            } else {\n                dispatch(setNote({msg: res.message, type: \"error\", error: true, success: false}));\n            }\n        }).catch(error => {\n        dispatch(toggleIsFetching(false));\n        error.response && dispatch(setNote({\n            msg: error.response.data.message,\n            type: \"error\",\n            error: true,\n            success: false\n        }));\n    });\n};\n\nexport const postTodo = (data) => {\n    return (dispatch) => {\n        handleTodo(dispatch, data, todoAPI.addTodo.bind(todoAPI));\n    }\n};\n\nexport const updateTodo = (data) => {\n    return (dispatch) => {\n        handleTodo(dispatch, data, todoAPI.updateTodo.bind(todoAPI));\n    }\n};\n\nexport const deleteTodo = (id) => {\n    return (dispatch) => {\n        handleTodo(dispatch, id, todoAPI.deleteTodo.bind(todoAPI));\n    }\n};\n\n\nexport default todoReducer;\n","const validate = values => {\n    const errors = {};\n    if (!values.title) {\n        errors.title = 'Required field'\n    }\n    if (!values.status) {\n        errors.status = 'Required field'\n    }\n\n    return errors\n};\n\nexport default validate;\n","export const statusList = [\n    {id: 1, title: 'created'},\n    {id: 2, title: 'in progress'},\n    {id: 3, title: 'completed'}\n];\n","import React, {useState, useEffect} from 'react';\nimport {Box, MenuItem, Button, Grid} from \"@material-ui/core\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {renderTextField, renderSelectField} from \"../../../shared/FormControls/FormControls\";\nimport {postTodo, updateTodo, resetCurrentTodo} from \"../../../../store/todoReducer\";\nimport {connect} from \"react-redux\";\nimport validate from \"./validate\";\nimport s from \"./TodosForm.module.scss\";\nimport {statusList} from \"../todosList\";\n\n\nconst TodosFormBox = (props) => {\n    const {handleSubmit, currentTodo, resetCurrentTodo, todos} = props;\n    const [status, setStatus] = useState('');\n    const [editMode, setEditMode] = useState(false);\n\n    useEffect(() => {\n        handleReset();\n    }, [todos]);\n\n    useEffect(() => {\n        if (currentTodo._id) {\n            props.initialize({\n                _id: currentTodo._id,\n                title: currentTodo.title,\n                status: currentTodo.status\n            });\n            setStatus(currentTodo.status);\n            setEditMode(true);\n        }\n    }, [currentTodo]);\n\n    const handleStatusChange = (event) => {\n        setStatus(event.target.value);\n    };\n    const handleReset = () => {\n        resetCurrentTodo();\n        setStatus(currentTodo.status);\n        setEditMode(false);\n        setStatus('');\n        props.initialize({});\n    };\n\n    return (\n        <Box p=\"1rem 0 0\">\n            <form onSubmit={handleSubmit}>\n                <Grid container justify=\"space-between\" alignItems=\"flex-start\">\n                    <Field\n                        name=\"title\"\n                        label=\"To do\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        className={s.fieldBox}\n                        component={renderTextField}\n                    />\n                    <Field\n                        name=\"status\"\n                        label=\"select status\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        inputProps={{value: status}}\n                        className={s.fieldBox}\n                        onChange={handleStatusChange}\n                        component={renderSelectField}\n                    >\n                        {statusList.map((option) => (\n                            <MenuItem key={option.id} value={option.id}>\n                                {option.title}\n                            </MenuItem>\n                        ))}\n                    </Field>\n                    <Button type=\"submit\" className={s.submit} variant=\"contained\" color=\"primary\">\n                        {editMode ? 'Update' : 'Add'}\n                    </Button>\n                    {editMode &&\n                    <Button type=\"button\" className={s.submit} variant=\"outlined\" color=\"primary\" onClick={handleReset}>\n                        Cancel\n                    </Button>\n                    }\n                </Grid>\n            </form>\n        </Box>\n    )\n};\n\n\nconst TodoReduxForm = reduxForm({form: 'todos', validate})(TodosFormBox);\n\nconst TodosForm = (props) => {\n    const onSubmit = (data) => {\n        data.author = props.authorId;\n\n        if (props.currentTodo._id) {\n            props.updateTodo(data);\n        } else {\n            props.postTodo(data);\n        }\n    };\n\n    return <TodoReduxForm\n        onSubmit={onSubmit}\n        currentTodo={props.currentTodo}\n        todos={props.todos}\n        resetCurrentTodo={props.resetCurrentTodo}\n    />\n};\n\nconst mapStateToProps = (state) => ({\n    authorId: state.profile._id,\n    currentTodo: state.todos.currentTodo,\n    todos: state.todos.list\n});\n\n\nexport default connect(mapStateToProps, {postTodo, updateTodo, resetCurrentTodo})(TodosForm);\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Grid, Typography, IconButton} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport s from './Todo.module.scss';\nimport {statusList} from \"../todosList\";\nimport {deleteTodo, setCurrentTodo} from \"../../../../store/todoReducer\";\n\nconst Todo = (props) => {\n    const status = statusList.filter(el => el.id === props.status);\n\n    const handleDelete = () => {\n        props.deleteTodo(props._id);\n    };\n\n    const handleEdit = () => {\n      props.setCurrentTodo(props);\n      window.scrollTo(0, 0);\n    };\n\n    return (\n        <Grid container justify=\"space-between\" alignItems=\"center\" className={s.todoWrap} data-status={`todoLabel_${status[0].id}`}>\n            <Typography className={s.task}>{props.title}</Typography>\n            <Typography>{status[0].title}</Typography>\n            <div>\n                <IconButton aria-label=\"edit\" color=\"primary\" className={s.iconBtn} onClick={handleEdit}>\n                    <EditIcon fontSize=\"small\"/>\n                </IconButton>\n                <IconButton aria-label=\"delete\" color=\"secondary\" className={s.iconBtn} onClick={handleDelete}>\n                    <DeleteIcon fontSize=\"small\"/>\n                </IconButton>\n            </div>\n        </Grid>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps, {deleteTodo, setCurrentTodo})(Todo);\n","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport {Redirect} from 'react-router-dom';\nimport {Box, Container, Typography} from \"@material-ui/core\";\nimport TodosForm from \"./TodosForm/TodosForm\";\nimport Todo from \"./Todo/Todo\";\nimport {requestTodos} from \"../../../store/todoReducer\";\n\n\nconst Todos = (props) => {\n    useEffect(() => {\n        props.requestTodos();\n    }, []);\n\n\n    if (!props.isAuth) {\n        return <Redirect to='/login'/>\n    }\n\n    return (\n        <Box p=\"4rem 0\">\n            <Container maxWidth=\"md\">\n                <Typography variant=\"h5\" component=\"h1\" gutterBottom>\n                    Hello <strong>{props.name}</strong>, here is your Todos list\n                </Typography>\n                <TodosForm/>\n\n                <Box p=\"2rem 0 0\">\n                    {props.todos.map(todo => <Todo key={todo._id} {...todo} />)}\n                </Box>\n            </Container>\n        </Box>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.profile.isAuth,\n    name: state.profile.name,\n    todos: state.todos.list\n});\n\nexport default connect(mapStateToProps, {requestTodos})(Todos);\n","const validate = values => {\n    const errors = {};\n    if (!values.username) {\n        errors.username = 'Required field'\n    }\n\n    if (!values.password) {\n        errors.password = 'Required field'\n    }\n\n    return errors\n};\n\nexport default validate;\n","import React from \"react\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {Box, Container, Button, Grid, Link, Typography} from \"@material-ui/core\";\nimport {Field, reduxForm} from \"redux-form\";\nimport validate from \"./validate\";\nimport {renderTextField} from \"../../shared/FormControls/FormControls\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../../store/profileReducer\";\n\nconst LoginForm = (props) => {\n    const {handleSubmit} = props;\n\n    return (\n        <Box p=\"4rem 0\">\n            <Container maxWidth=\"xs\">\n                <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\n                    Sign In\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <Field\n                        name=\"username\"\n                        label=\"Username\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth={true}\n                        component={renderTextField}\n                    />\n                    <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth={true}\n                        component={renderTextField}\n                    />\n                    <Box m=\"1rem 0 0\">\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n                            Sign In\n                        </Button>\n                    </Box>\n                    <Box m=\"2rem 0 0\">\n                        <Grid container justify=\"center\">\n                            <Grid item>\n                                <Link component={NavLink} to=\"/register\"\n                                      variant=\"body2\">{\"Don't have an account? Sign Up\"}</Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </form>\n            </Container>\n        </Box>\n    )\n};\n\nconst LoginReduxForm = reduxForm({form: 'login', validate})(LoginForm);\n\n\nconst Login = (props) => {\n    const onSubmit = (data) => {\n        props.login(data);\n    };\n\n    if (props.isAuth) {\n        return <Redirect to={\"/\"}/>\n    }\n\n    return <LoginReduxForm onSubmit={onSubmit}/>;\n};\n\nconst mapStateToProps = (state) => ({\n    isFetching: state.profile.isFetching,\n    isAuth: state.profile.isAuth\n});\n\nexport default connect(mapStateToProps, {login})(Login);\n\n\n","const validate = values => {\n    const errors = {};\n    if (!values.username) {\n        errors.username = 'Required field'\n    }\n\n    if (!values.name) {\n        errors.name = 'Required field'\n    }\n\n    if (!values.password) {\n        errors.password = 'Required field'\n    } else if (values.password.length < 5) {\n        errors.password = 'Password should be at least 4 digits'\n    }\n\n    if (!values.repeatPassword) {\n        errors.repeatPassword = 'Required field'\n    } else if (values.password !== values.repeatPassword) {\n        errors.repeatPassword = 'Passwords should match'\n    }\n\n    if (!values.phone || !values.phone.match(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/)) {\n        errors.phone = 'Wrong phone format'\n    }\n\n    return errors\n};\n\nexport default validate;\n","import React from \"react\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {createTextMask} from \"redux-form-input-masks\";\nimport {Box, Container, Button, Grid, Link, Typography} from \"@material-ui/core\";\nimport {Field, reduxForm} from \"redux-form\";\nimport validate from \"./validate\";\nimport {renderTextField} from \"../../shared/FormControls/FormControls\";\nimport {connect} from \"react-redux\";\nimport {register} from \"../../../store/profileReducer\";\n\nconst phoneMask = createTextMask({\n    pattern: '(999) 999-9999',\n});\n\nconst RegisterForm = (props) => {\n    const {handleSubmit} = props;\n\n    return (\n        <Box p=\"4rem 0\">\n            <Container maxWidth=\"xs\">\n                <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\n                    Sign Up\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <Field\n                        name=\"name\"\n                        label=\"Name\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth={true}\n                        component={renderTextField}\n                    />\n                    <Field\n                        name=\"username\"\n                        label=\"Username\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth={true}\n                        component={renderTextField}\n                    />\n                    <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth={true}\n                        component={renderTextField}\n                    />\n                    <Field\n                        name=\"repeatPassword\"\n                        label=\"Repeat Password\"\n                        type=\"password\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth={true}\n                        component={renderTextField}\n                    />\n                    <Field\n                        name=\"birthday\"\n                        label=\"Date of Birth (MM/DD/YYYY)\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth={true}\n                        component={renderTextField}\n                    />\n                    <Field\n                        name=\"phone\"\n                        label=\"Phone number\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        type=\"tel\"\n                        {...phoneMask}\n                        fullWidth={true}\n                        component={renderTextField}\n                    />\n                    <Field\n                        name=\"address\"\n                        label=\"Address\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth={true}\n                        component={renderTextField}\n                    />\n                    <Box m=\"1rem 0 0\">\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n                            Register\n                        </Button>\n                    </Box>\n                    <Box m=\"2rem 0 0\">\n                        <Grid container justify=\"center\">\n                            <Grid item>\n                                <Link component={NavLink} to=\"/login\"\n                                      variant=\"body2\">{\"Already have account? Sign In\"}</Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </form>\n            </Container>\n        </Box>\n    )\n};\n\nconst RegisterReduxForm = reduxForm({form: 'register', validate})(RegisterForm);\n\n\nconst Register = (props) => {\n    const onSubmit = (data) => {\n        props.register(data);\n    };\n\n    if (props.isAuth) {\n        return <Redirect to={\"/\"}/>\n    }\n\n    return <RegisterReduxForm onSubmit={onSubmit}/>;\n};\n\nconst mapStateToProps = (state) => ({\n    isFetching: state.profile.isFetching,\n    isAuth: state.profile.isAuth\n});\n\nexport default connect(mapStateToProps, {register})(Register);\n\n\n","import React from \"react\";\nimport {Container, Grid, Typography, Box} from \"@material-ui/core\";\n\n\nconst NotFound = () => {\n    return (\n        <Container maxWidth=\"md\">\n            <Box p=\"4rem 0 0\">\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    Page not found :(\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\" align=\"center\">\n                    Maybe the page you are looking for has been removed, or you typed in the wrong URL\n                </Typography>\n            </Grid>\n            </Box>\n\n        </Container>\n    )\n};\n\n\nexport default NotFound;\n","import React, {useEffect} from 'react';\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {hideNote} from \"./store/notificationReducer\";\nimport {initializeApp} from \"./store/appReducer\";\nimport Preloader from \"./components/shared/Preloader/Preloader\";\nimport Header from \"./components/shared/Header/Header\";\nimport Footer from \"./components/shared/Footer/Footer\";\nimport Notification from \"./components/shared/Notification/Notification\";\nimport Todos from \"./components/dashboard/Todos/Todos\";\nimport Login from \"./components/auth/Login/Login\";\nimport Register from \"./components/auth/Register/Register\";\nimport NotFound from \"./components/public/NotFound/NotFound\";\n\nconst AppContainer = (props) => {\n    useEffect(() => {\n        props.initializeApp();\n    }, []);\n\n\n    if (!props.initialized) {\n        return <Preloader/>\n    }\n\n    return (\n        <div className=\"appWrapper\">\n            <Header/>\n            <div className=\"mainContainer\">\n                <Switch>\n                    <Route exact path=\"/\" render={() => <Todos/>}/>\n                    <Route path=\"/login\" render={() => <Login/>}/>\n                    <Route path=\"/register\" render={() => <Register/>}/>\n                    <Route path=\"/404\" render={() => <NotFound/>}/>\n                    <Redirect to=\"/404\"/>\n                </Switch>\n            </div>\n            <Footer/>\n            <Notification\n                type={props.notification.type}\n                msg={props.notification.msg}\n                hideNote={props.hideNote}\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    notification: state.notification,\n    initialized: state.app.initialized,\n    isDataFetching: state.app.isDataFetching\n});\n\nconst App = compose(withRouter, connect(mapStateToProps, {hideNote, initializeApp}))(AppContainer);\n\nexport default App;\n","import {combineReducers} from \"redux\";\nimport {connectRouter} from \"connected-react-router\";\nimport {reducer as formReducer} from \"redux-form\";\n\nimport profileReducer from \"./profileReducer\";\nimport notificationReducer from \"./notificationReducer\";\nimport todoReducer from \"./todoReducer\";\nimport appReducer from \"./appReducer\";\n\nconst reducersGroup = (history) => combineReducers({\n    router: connectRouter(history),\n    app: appReducer,\n    todos: todoReducer,\n    notification: notificationReducer,\n    profile: profileReducer,\n    form: formReducer\n});\n\n\nexport default reducersGroup;\n","import {applyMiddleware, compose, createStore} from \"redux\";\nimport {routerMiddleware} from \"connected-react-router\";\n\nimport thunkMiddleware from \"redux-thunk\";\nimport {createBrowserHistory} from \"history\";\nimport reducersGroup from \"./reducers\";\n\nexport const history = createBrowserHistory();\n\n// For Redux Browser Extension\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducersGroup(history),\n    composeEnhancers(applyMiddleware(\n        routerMiddleware(history),\n        thunkMiddleware\n    ))\n);\nwindow.__store__ = store;\n\nexport default store;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\n\nexport default ScrollToTop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/styles/index.scss';\nimport {Provider} from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {ConnectedRouter} from \"connected-react-router\";\nimport store, {history} from './store/store';\nimport ScrollToTop from \"./components/shared/ScrollToTop/ScrollToTop\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <CssBaseline/>\n            <App/>\n            <ScrollToTop/>\n        </ConnectedRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldBox\":\"TodosForm_fieldBox__1kwXu\",\"submit\":\"TodosForm_submit__1Az8C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconBtn\":\"Todo_iconBtn__13GWB\",\"todoWrap\":\"Todo_todoWrap___aSqP\",\"task\":\"Todo_task__2rXzZ\"};"],"sourceRoot":""}